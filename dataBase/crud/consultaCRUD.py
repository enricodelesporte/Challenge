from models.consultaModel import Consulta
from dataBase.conexao.db_manager import DBManager
import re
from datetime import datetime, time

class consultaCRUD:
    def __init__(self, conexao):
        self.conn = conexao
        self.cursor = self.conn.cursor()

    def normalizar_hora_banco(valor):
        if not valor:
            return ""
    
        if isinstance(valor, (datetime, time)):
            return valor.strftime("%H:%M")

        s = str(valor).strip()

        padrao_hora = re.search(r'([01]?\d|2[0-3]):[0-5]\d', s)
        if padrao_hora:
            return padrao_hora.group(0)

        if ":" in s and len(s) >= 5:
            return s[:5]

        return s


    def criarTabelaConsulta(self):
        self.cursor.execute("""
            SELECT table_name
            FROM user_tables
            WHERE table_name = 'CONSULTAS'
        """)
        tabela = self.cursor.fetchone()

        if tabela:
            print("Tabela 'CONSULTAS' j√° existe.")
        else:
            self.cursor.execute("""
                CREATE TABLE CONSULTAS (
                id NUMBER (8) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                paciente_id NUMBER (8) REFERENCES PACIENTE(id),
                data DATE NOT NULL,
                hora VARCHAR2(5) NOT NULL,
                especialidade VARCHAR2(100) NOT NULL
            )
        """)
        self.conn.commit()

    def criarConsulta(self, consulta: Consulta):
        sql = "INSERT INTO CONSULTAS (paciente_id, data, hora, especialidade) VALUES (:1, :2, :3, :4)"
        self.cursor.execute(sql, (consulta.paciente_id, consulta.data, consulta.hora, consulta.especialidade))
        self.conn.commit()

    def listarConsultas(self):
        self.cursor.execute("SELECT id, paciente_id, data, hora, especialidade FROM CONSULTAS")
        rows = self.cursor.fetchall()
        return [Consulta(id= row[0],paciente_id=row[1], data=row[2], hora=row[3], especialidade=row[4]) for row in rows]
    
    def atualizarConsulta(self, idConsulta, novaData, novoHorario):
        sql = "UPDATE CONSULTAS SET data = :1, hora = :2 WHERE id = :3"
        self.cursor.execute(sql, (novaData, novoHorario, idConsulta))
        self.conn.commit()

    def deletarConsulta(self, idConsulta):
        sql = "DELETE FROM CONSULTAS WHERE id = :1"
        self.cursor.execute(sql, (idConsulta,))
        self.conn.commit()
        